# action.yml
name: "Development Plexicus Runner Action"

description: 'Development Plexicus code analyzer for COVULOR cloud service'
author: 'Plexicus'
branding:
  icon: 'shield'
  color: 'blue'
inputs:
  plexalyzer-token:
    description: 'Authentication token for COVULOR cloud service'
    required: true
  default-owner:
    description: 'Default repository owner'
    required: false
  repo-id:
    description: 'Repository ID in COVULOR service'
    required: true
  repo-name:
    description: 'Name of the repository'
    required: true
  branch:
    description: 'Branch name for the pull request'
    required: true
  url:
    description: 'Clone URL of the repository'
    required: true
  files-path:
    description: 'Path to file containing files list for scanning'
    required: false
  workspace-path:
    description: 'Path to the repository workspace'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Prepare Files List in Required Format
      id: prepare-files
      if: ${{ inputs.files-path }}
      shell: bash
      run: |
        jq -r '.[]' "${{ inputs.files-path }}" > files_to_analyze.txt
        echo "files_to_analyze=$(pwd)/files_to_analyze.txt" >> $GITHUB_ENV

    - name: Run PLEXALYZER Docker Analysis
      shell: bash
      env:
        PLEXALYZER_TOKEN: ${{ inputs.plexalyzer-token }}
        MESSAGE_URL: 'https://api.covulor.dev.plexicus.com/receive_plexalyzer_message'
      run: |
        # Construct the Docker command
        docker_command="docker run --rm \
          -e PLEXALYZER_TOKEN=\"$PLEXALYZER_TOKEN\" \
          -e MESSAGE_URL=\"$MESSAGE_URL\" \
          -v \"${{ inputs.workspace-path }}:/mounted_volumes\""

        if [ -n "${files_to_analyze}" ]; then
          docker_command+=" -v \"$files_to_analyze:/app/files_to_analyze.txt\""
        fi
        
        docker_command+=" plexicus/plexalyzer-dev:latest \
          /venvs/plexicus-fastapi/bin/python /app/analyze.py \
          --repository_id \"${{ inputs.repo-id }}\" \
          --name \"${{ inputs.repo-name }}\" \
          --branch \"${{ inputs.branch }}\" \
          --url \"${{ inputs.url }}\" \
          --output \"json\" \
          --no-progress-bar"

        if [ ${{ inputs.default-owner }} ]; then
          docker_command+=" --owner \"${{ inputs.default-owner }}\""
        fi

        if [ -n "${files_to_analyze}" ]; then
          docker_command+=" --files \"/app/files_to_analyze.txt\""
        fi

        analysis_output=$(eval $docker_command || true)        
        docker_exit_code=$?

        echo "$analysis_output" > analysis_results.json
        echo "findings_output=$(pwd)/analysis_results.json" >> $GITHUB_ENV
        echo "Docker command exit code: $docker_exit_code"

        if [ $docker_exit_code -ne 0 ]; then
          echo "WARNING: Docker command failed with exit code $docker_exit_code."
        fi
